package com.xingguo.action.sys;

import java.util.Date;
import java.util.HashMap;
import java.util.UUID;

import org.apache.commons.lang.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;

import com.xingguo.action.common.BaseAction;
import com.xingguo.constants.SystemConst;
import com.xingguo.entity.AppUsers;
import com.xingguo.service.sys.AppUserService;
import com.xingguo.springSecurity.utils.SpringSecurityUtils;
import com.xingguo.utils.Const;
import com.xingguo.utils.UUIDSupport;

public class UserAction extends BaseAction<AppUsers> {
	@Autowired
	private AppUserService userService;
	
	private String orgName;
	private Date dateStart;
	private Date dateEnd;
	/**
	 * 加载列表
	 * @return
	 */
	public String list(){
		jsonData=new HashMap<String, Object>();
		try {
			getPageParams();
			pagination=userService.findPageWithCondition(condition, pageNo, pageSize);
			jsonData.put("page", pagination);
		} catch (Exception e) {
			log.error(e);
			jsonData.put("status", 1);
			jsonData.put("msg", Const.LOAD_FAIL);
		}
		return JSON_RESULT;
	}
	/**
	 * 获取页面传递过来的数据
	 */
	private void getPageParams(){
		condition=new HashMap<String, Object>();
		if(entity!=null){
			if(StringUtils.isNotBlank(entity.getLoginName())){
				condition.put("loginName", entity.getLoginName());
			}
			if(StringUtils.isNotBlank(entity.getUserName())){
				condition.put("userName", entity.getUserName());
			}
			if(StringUtils.isNotBlank(entity.getDisabled())){
				condition.put("mobilePhone", entity.getMobilePhone());
			}
			if(StringUtils.isNotBlank(orgName)){
				condition.put("orgName", orgName);
			}
			if(StringUtils.isNotBlank(entity.getDisabled())){
				condition.put("disabled", entity.getDisabled());
			}
			if(dateStart!=null){
				condition.put("dateStart", dateStart);
			}
			if(dateEnd!=null){
				condition.put("dateEnd", dateEnd);
			}
			
		}
	}
	
	public String userDetail(){
		jsonData=new HashMap<String, Object>();
		try {
			AppUsers user = userService.findById(entity.getId());
			jsonData.put("user", user);
		} catch (Exception e) {
			log.error(e);
			jsonData.put("status", 1);
			jsonData.put("msg", e.getMessage());
		}
		return JSON_RESULT;
	}
	
	public String addUser(){
		jsonData=new HashMap<String, Object>();
		try {
			entity.setId(UUIDSupport.getUUIDWithoutMinus());
			Date date=new Date();
			entity.setCreateDate(date);
			entity.setCreator(SpringSecurityUtils.getCurrUserName());
			entity.setDeleteFlag(SystemConst.DELETE_FLAG_NO+"");
		} catch (Exception e) {
			log.error(e);
			
		}
		return JSON_RESULT;
	}
	


	@Override
	public AppUsers getModel() {
		if(entity==null){
			entity=new AppUsers();
		}
		return entity;
	}
	public String getOrgName() {
		return orgName;
	}
	public void setOrgName(String orgName) {
		this.orgName = orgName;
	}
	/**
	 * @return the dateStart
	 */
	public Date getDateStart() {
		return dateStart;
	}
	/**
	 * @param dateStart the dateStart to set
	 */
	public void setDateStart(Date dateStart) {
		this.dateStart = dateStart;
	}
	/**
	 * @return the dateEnd
	 */
	public Date getDateEnd() {
		return dateEnd;
	}
	/**
	 * @param dateEnd the dateEnd to set
	 */
	public void setDateEnd(Date dateEnd) {
		this.dateEnd = dateEnd;
	}
	
	
}
